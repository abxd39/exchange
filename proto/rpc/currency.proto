syntax = "proto3";
package g2u;

service CurrencyRPC {
    	rpc AdminCmd(AdminRequest) returns (AdminResponse) {};

    	// 新增广告(买卖)
    	rpc AddAds(AdsRequest) returns (CurrencyResponse){};
    	// 修改广告(买卖)
    	rpc UpdatedAds(AdsRequest) returns (CurrencyResponse){};
    	// 修改广告(买卖)状态
    	rpc UpdatedAdsStatus(AdsStatusRequest) returns (CurrencyResponse){};



        /// Order ///
    	rpc OrdersList(OrderRequest) returns(OrdersListResponse) {};
    	rpc AddOrder(AddOrderRequest) returns(OrderResponse) {};


}

message AdminRequest {
	string cmd      =   1;
}

message AdminResponse {
	int32 code      =   1;
	int32 message   =   2;
	string data     =   3;
}

// 返回的状码
message CurrencyResponse {
	int32 code      =   1;
}

// 广告(买卖)
message AdsRequest {
    uint64 id           = 1;  // 广告ID
    uint64 uid          = 2;  // 用户ID
    uint32 type_id      = 3;  // 类型:1出售 2购买
    uint32 token_id     = 4;  // 货币类型
    string token_name   = 5;  // 货币名称
    double price        = 6;  // 单价
    double num          = 7;  // 数量
    int32  premium      = 8;  // 溢价
    double accept_price = 9;  // 可接受最低[高]单价
    uint32 min_limit    = 10; // 最小限额
    uint32 max_limit    = 11; // 最大限额
    uint32 is_twolevel  = 12; // 是否要通过二级认证:0不通过 1通过
    string pays         = 13; // 支付方式:以 , 分隔: 1,2,3
    string remarks      = 14; // 交易备注
    string reply        = 15; // 自动回复问候语
    uint32 is_usd       = 16; // 是否美元支付:0否 1是
    uint32 states       = 17; // 状态:0下架 1上架
    string created_time = 18; // 创建时间
    string updated_time = 19; // 修改时间
}

message AdsIdRequest {
    uint64 id           = 1;  // 广告ID
}

// 修改广告(买卖)状态
message AdsStatusRequest {
    uint64 id           = 1;  // 广告ID
    uint32 status_id    = 2;  // 状态: 1下架 2上架 3正常(不删除) 4删除

}



////////////////////////// Order ////////////////////////////

message AddOrderRequest{
    uint64   order_id  = 1;
    uint64   ad_id     = 2;
    uint32   ad_type   = 3;
    double    price     = 4;
    double   num       = 5;
    uint64   token_id  = 6;
    uint64   pay_id    = 7;
    uint64   sell_id   = 8;
    string   sell_name = 9;
    uint64   buy_id    = 10;
    string   buy_name  = 11;
    double    fee       = 12;
    uint32   states    = 13;
    uint32   pay_status = 14;
    uint32   cancel_type = 15;
}

// 返回的状码
message OrderResponse {
	int32    code      =  1;
	int32    message   =  2;
	string   data      = 3;
}

message OrderRequest {
    int32  page       = 1; //页数
    int32  page_num   = 2; //每页行数

}
message OrdersListResponse{
    message Orders {
        uint64   order_id  = 1;
        uint64   ad_id     = 2;
        uint32   ad_type   = 3;
        double    price     = 4;
        double    num       = 5;
        uint64   token_id  = 6;
        uint64   pay_id    = 7;
        uint32   states    = 8;
        uint32   pay_status = 9;
        uint32   cancel_type = 10;
        string   created_time = 11;
        string   updated_time = 12;
    }

    repeated Orders  orders =1;
    int32 err               =2;
    string message          =3;

}