syntax = "proto3";
package g2u;


import "rpc/currency.proto";
import "rpc/define.proto";

service PriceRPC {
    rpc AdminCmd(AdminRequest) returns (AdminResponse) {};
    rpc CurrentPrice(CurrentPriceRequest) returns (CurrentPriceResponse) {};

    rpc LastPrice(LastPriceRequest) returns (LastPriceResponse) {};
    //交易队列
    rpc Symbols(NullRequest) returns (SymbolsResponse) {};


    //自定义队列
    rpc SelfSymbols(SelfSymbolsRequest) returns (SelfSymbolsResponse) {};

    //行情列表
    rpc Quotation(QuotationRequest) returns (QuotationResponse) {};

    // 获取一个币对的价格比
    rpc GetSymbolsRate(GetSymbolsRateRequest) returns (GetSymbolsRateResponse) {};

    //成交量
    rpc Volume(VolumeRequest) returns (VolumeResponse) {};
}

//






message PriceCache {
    int64 id           =   1;
    string symbol      =   2;
    int64 price        =3;
    int64   created_time =4;
    int64 amount         =5;
    int64 vol              =6;
    int64 count         =7;
    int64 usd_vol     =8;
}


message PeriodPrice{
    int64 id            =5;
    double amount       =1;
    double close        =2;
    int64 count        =3;
    double high         =4;
    double low          =6;
    double open         =7;
    double vol          =8;
}


message PriceBaseData{
    string amount       =1;
    string cny_price    =2;
    string price        =3;
    string high         =4;
    string low          =5;
    string symbol       =6;
    string scope        =7;
}

message CurrentPriceRequest{
    string symbol       =1;
}

message CurrentPriceResponse{
    PriceBaseData data =1;
}

message LastPriceRequest{
    string symbol       =1;
}

message LastPriceResponse{
    PriceCache data     =1;
    bool ok             =2;
}

message SelfSymbolsResponse{
    int32 err                       =1;
    string message                  =2;
    SymbolsBaseData data                      =3;
}


message SymbolBaseData{
    string  symbol                       =1;
    string  price                        =2;
    string  cny_price                    =3;
    string  scope                        =4;
    int32  trade_token_id                =5;
}

message SelfSymbolsRequest{
    uint64 uid                      =1;
}

message SymbolsBaseData{
    int32 token_id                      =1;
    int32 mark                          =2;
    repeated SymbolBaseData data        =3;
}

message SymbolsResponse{
    int32 err                       =1;
    string message                  =2;
    SymbolsBaseData        usdt     =3;
    SymbolsBaseData        btc      =4;
    SymbolsBaseData        eth      =5;
    SymbolsBaseData        sdc      =6;
}

message QuotationRequest{
    int32 token_id              =1;
}

message QutationBaseData{
    string symbol                       =1;
    string price                        =2;
    string scope                        =3;
    string low                          =4;
    string high                         =5;
    string amount                         =6;
}

message QuotationResponse{
    repeated QutationBaseData data          =1;
}


message GetSymbolsRateRequest {
    repeated string  symbols=1;     //
}

message RateBaseData{
    string symbol       = 1;
    string price        = 2;
    string cny_price    = 3;
}

message GetSymbolsRateResponse {
    map<string, RateBaseData> data = 1; // 定义Map对象
}

message VolumeRequest{

}

message VolumeResponse{
    int64 dayVolume      =1;
    int64 weekVolume     =2;
    int64 monthVolume    =3;
}
