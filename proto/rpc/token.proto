syntax = "proto3";
package g2u;

import "rpc/currency.proto";
import "rpc/define.proto";

service TokenRPC {
    	rpc AdminCmd(AdminRequest) returns (AdminResponse) {};

        //委托入队
		rpc EntrustOrder(EntrustOrderRequest) returns (CommonErrResponse) {};
        //新增代币
        rpc AddTokenNum(AddTokenNumRequest) returns (CommonErrResponse) {};




        //历史委托队列
        rpc EntrustHistory(EntrustHistoryRequest) returns (EntrustHistoryResponse) {};

        //当前委托队列
        rpc EntrustList(EntrustHistoryRequest) returns (EntrustListResponse) {};

        //代币余额
        rpc TokenBalance(TokenBalanceRequest) returns (TokenBalanceResponse) {};

        //代币余额列表
        rpc TokenBalanceList(TokenBalanceListRequest) returns (TokenBalanceListResponse) {};

        //代币交易明细列表
        rpc TokenTradeList(TokenTradeListRequest) returns (TokenTradeListResponse) {};


        rpc DelEntrust(DelEntrustRequest) returns (DelEntrustResponse) {}
        //########market##########//



        rpc HistoryKline(HistoryKlineRequest) returns (HistoryKlineResponse) {};


        //市场委托队列
        rpc EntrustQuene(EntrustQueneRequest) returns (EntrustQueneResponse) {};

        //实时交易
        rpc Trade(TradeRequest) returns (TradeRespone) {};

        //########market##########//


        //获取队列配置
        rpc GetConfigQuene(NullRequest) returns (ConfigQueneResponse) {}
}

enum ENTRUST_OPT //操作方向类型
{
    EONONE          = 0;
    BUY             = 1; //买入类型
    SELL            = 2; //卖出类型
    EOMAX          = 3;
}

enum ENTRUST_TYPE //委托类型
{
    ETNONE                    = 0;
    MARKET_PRICE            = 1;  //市价委托
    LIMIT_PRICE             = 2; //限价委托
    ETMAX                   =3;
}

enum TOKEN_OPT_TYPE //金钱操作类型
{
    TOTNONE                    = 0;
    ADD                     = 1;  //加钱
    DEL                     = 2; //减钱
    TOTMAX                  =3;
}

enum TOKEN_OPT_TYPE_ADD_TYPE //加钱类型，TOKEN_OPT_TYPE为ADD时
{
    TOAT_NONE                  = 0;
    BALANCE                    = 1; //加余额
    FROZEN                     = 2; //加冻结余额
}


//冻结操作类型
/*
enum FRONZE_TYPE
{
    ENTRUST                         =0;
    BACK_SURPLUS                     = 3; //交易后剩余数量退款
}
*/
//交易类型
enum TRADE_STATES //
{
    TRADE_NONE                             = 0;//未成交
    TRADE_PART                    = 1; //部分成交
    TRADE_ALL                     = 2; //加冻结余额
    TRADE_DEL                    = 3; //撤单
}

//资金流水操作类型
enum TOKEN_TYPE_OPERATOR
{
    NONE                                    =0;
    HISTORY_HASH                            =1;//区块入账
    HISTORY_ENTRUST                         =2;//委托
    HISTORY_REGISTER                        =3;//注册奖励
    HISTORY_IVITE                           =4;//邀请奖励
    HISTORY_ENTRUST_DEL                     =5;//撤销委托
    HISTORY_TRADE                           =6;//交易入账
    HISTORY_FRONZE_BACK                     =7;//
    HISTORY_FRONZE_SYS_SURPLUS              =8;//系统自动退小额余额
    FROZEN_COMFIRM_DEL                      =9;//交易确认扣减冻结数量
}

message  EntrustOrderRequest {
    string symbol                    =2;//交易币种
    int64 on_price                    =3;//委托价格
    int64 num                      =4;//委托数量
    ENTRUST_OPT  opt                      =5;
    ENTRUST_TYPE  type                  =6;
    uint64 uid                      =7;
}

message EntrustOrderResponse{
    int32 err                       =1;
    string message                  =2;
}

message AddTokenNumRequest {
    uint64 uid = 3;
    int32 token_id = 4;
    int64 num = 6;
    TOKEN_OPT_TYPE opt = 7;
    bytes ukey  =8;
    TOKEN_TYPE_OPERATOR type  =9;
    TOKEN_OPT_TYPE_ADD_TYPE opt_add_type = 10;
}

message HistoryKlineRequest{
    string symbol   =1;
    string period   =2;
    string size     =3;
}

message HistoryKlineResponse{
    int32 err                       =1;
    string message                  =2;
}






message EntrustBaseData{
    string price                        =1;
    string surplus_num                  =2;
    string on_price                     =3;
    string cny_price                        =4;
}

message EntrustQueneRequest {
    string symbol       =3;
}

message EntrustQueneResponse {
    int32 err                       =1;
    string message                  =2;
    repeated EntrustBaseData buy    =3;
    repeated EntrustBaseData sell   =4;
}

message EntrustHistoryRequest{
    uint64 uid                          =1;
    int32 limit                         =2;
    int32 page                          =3;
}

message EntrustHistoryBaseData{
    string entrust_id                    =1;
    string  symbol                        =2;
    ENTRUST_OPT opt                      =3;
    ENTRUST_TYPE   type                  =4;
    string all_num                       =5;
    string on_price                      =6;
    string trade_num                   =7;
    int32 states                        =8;
    string create_time                   =9;
    string mount                        =10;
    string price                          =11;
}

message EntrustListBaseData{
    string entrust_id                    =1;
    string  symbol                        =2;
    ENTRUST_OPT opt                      =3;
    ENTRUST_TYPE   type                  =4;
    string all_num                       =5;
    string on_price                      =6;
    string trade_num                   =7;
    int32 states                        =8;
    string create_time                   =9;
    string mount                        =10;
}

message EntrustHistoryResponse{
    int32 err                       =1;
    string message                  =2;
    repeated EntrustHistoryBaseData data=3;
}


message EntrustListResponse{
    int32 err                       =1;
    string message                  =2;
    repeated EntrustListBaseData data=3;
}


message TradeBaseData{
    string create_time              =1;
    string price                    =2;
    string num                      =3;
}


message TradeRequest {
    string symbol               =1;
}

message TradeRespone{
    int32 err                       =1;
    string message                  =2;
    repeated TradeBaseData    data  =3;
}


message TokenBalanceRequest{
    uint64 uid                      =1;
    int32 token_id                  =2;
}


message TokenBaseData{
    int32 token_id                    =1;
    string balance                  =2;

}

message TokenBalanceResponse{
    int32 err                       =1;
    string message                  =2;
    TokenBaseData balance                 =3;
}


message TokenBalanceListRequest{
    uint64 uid                      =1;
    bool no_zero                 =2;
    int32 token_id               =3;
}

message TokenBalanceListResponse{
    message Data{
        message List{
            int32 token_id                    =1;
            string token_name                 =2;
            string balance                    =3;
            string frozen                     =4;
            string worth_cny                  =5;
        }

        string total_worth_cny              =1;
        string total_worth_btc              =2;
        repeated List list                  =3;
    }

    int32 err                             =1;
    string message                        =2;
    Data data                             =3;
}

message TokenTradeListRequest{
    uint64 uid                      =1;
    int32 page                      =2;
    int32 page_num                  =3;
}

message TokenTradeListResponse{
    message Data {
        message Detail {
            int32 trade_id      =1;
            string token_name   =2;
            int32 opt             =3;
            int64 num           =4;
            int64 fee           =5;
            int64 deal_time     =6;
        }

        int32 page_index           =1;
        int32 page_size            =2;
        int32 total_page           =3;
        int32 total                =4;
        repeated Detail items      =5;
    }

    int32 err                             =1;
    string message                        =2;
    Data data                             =3;
}


message ConfigQueneBaseData{
    int32 token_id          =1;
    int32 token_trade_id    =2;
    string name             =4;
}

message CnyPriceBaseData{
    int32 token_id          =1;
    int64 cny_price         =2;
}

message ConfigQueneResponse{
    repeated ConfigQueneBaseData data           =1;
    repeated CnyPriceBaseData cny_data                  =2;
}


message DelEntrustRequest{
    uint64 uid          =1;
    string entrust_id   =2;
}

message DelEntrustResponse{
    int32 err                       =1;
    string message                  =2;
}