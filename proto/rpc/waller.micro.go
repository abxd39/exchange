// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: rpc/waller.proto

package g2u

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Gateway2Waller service

type Gateway2WallerService interface {
	Hello(ctx context.Context, in *HelloRequest2, opts ...client.CallOption) (*HelloResponse2, error)
}

type gateway2WallerService struct {
	c    client.Client
	name string
}

func NewGateway2WallerService(name string, c client.Client) Gateway2WallerService {
	if c == nil {
		c = client.NewClient()
	}
	if len(name) == 0 {
		name = "g2u"
	}
	return &gateway2WallerService{
		c:    c,
		name: name,
	}
}

func (c *gateway2WallerService) Hello(ctx context.Context, in *HelloRequest2, opts ...client.CallOption) (*HelloResponse2, error) {
	req := c.c.NewRequest(c.name, "Gateway2Waller.Hello", in)
	out := new(HelloResponse2)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Gateway2Waller service

type Gateway2WallerHandler interface {
	Hello(context.Context, *HelloRequest2, *HelloResponse2) error
}

func RegisterGateway2WallerHandler(s server.Server, hdlr Gateway2WallerHandler, opts ...server.HandlerOption) {
	type gateway2Waller interface {
		Hello(ctx context.Context, in *HelloRequest2, out *HelloResponse2) error
	}
	type Gateway2Waller struct {
		gateway2Waller
	}
	h := &gateway2WallerHandler{hdlr}
	s.Handle(s.NewHandler(&Gateway2Waller{h}, opts...))
}

type gateway2WallerHandler struct {
	Gateway2WallerHandler
}

func (h *gateway2WallerHandler) Hello(ctx context.Context, in *HelloRequest2, out *HelloResponse2) error {
	return h.Gateway2WallerHandler.Hello(ctx, in, out)
}
